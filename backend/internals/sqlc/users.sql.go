// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: users.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const getUserDetails = `-- name: GetUserDetails :one
SELECT username, display_name, avatar_url
FROM users
where id=$1
`

type GetUserDetailsRow struct {
	Username    string `json:"username"`
	DisplayName string `json:"display_name"`
	AvatarUrl   string `json:"avatar_url"`
}

func (q *Queries) GetUserDetails(ctx context.Context, id uuid.UUID) (GetUserDetailsRow, error) {
	row := q.db.QueryRowContext(ctx, getUserDetails, id)
	var i GetUserDetailsRow
	err := row.Scan(&i.Username, &i.DisplayName, &i.AvatarUrl)
	return i, err
}

const updateAvatar = `-- name: UpdateAvatar :one
UPDATE users
SET avatar_url = $2
WHERE id = $1
RETURNING id, username, display_name, avatar_url
`

type UpdateAvatarParams struct {
	ID        uuid.UUID `json:"id"`
	AvatarUrl string    `json:"avatar_url"`
}

func (q *Queries) UpdateAvatar(ctx context.Context, arg UpdateAvatarParams) (User, error) {
	row := q.db.QueryRowContext(ctx, updateAvatar, arg.ID, arg.AvatarUrl)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.DisplayName,
		&i.AvatarUrl,
	)
	return i, err
}

const updateDisplayName = `-- name: UpdateDisplayName :one
UPDATE users
SET display_name=$2
WHERE id=$1
RETURNING id, username, display_name, avatar_url
`

type UpdateDisplayNameParams struct {
	ID          uuid.UUID `json:"id"`
	DisplayName string    `json:"display_name"`
}

func (q *Queries) UpdateDisplayName(ctx context.Context, arg UpdateDisplayNameParams) (User, error) {
	row := q.db.QueryRowContext(ctx, updateDisplayName, arg.ID, arg.DisplayName)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.DisplayName,
		&i.AvatarUrl,
	)
	return i, err
}
